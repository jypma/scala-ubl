// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package ubl.in


/** 
            <ccts:Component xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Invoice-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
               <ccts:ComponentType>ABIE</ccts:ComponentType>
               <ccts:DictionaryEntryName>Invoice. Details</ccts:DictionaryEntryName>
               <ccts:Definition>The document used to request payment.</ccts:Definition>
               <ccts:ObjectClass>Invoice</ccts:ObjectClass>
            </ccts:Component>
         
*/
case class InvoiceType(invoicetypesequence1: ubl.in.InvoiceTypeSequence1,
  invoicetypesequence2: ubl.in.InvoiceTypeSequence2,
  invoicetypesequence3: ubl.in.InvoiceTypeSequence3,
  invoicetypesequence4: ubl.in.InvoiceTypeSequence4,
  invoicetypesequence5: ubl.in.InvoiceTypeSequence5) {
  lazy val UBLExtensions = invoicetypesequence1.UBLExtensions
  lazy val UBLVersionID = invoicetypesequence1.UBLVersionID
  lazy val CustomizationID = invoicetypesequence1.CustomizationID
  lazy val ProfileID = invoicetypesequence1.ProfileID
  lazy val ProfileExecutionID = invoicetypesequence1.ProfileExecutionID
  lazy val ID = invoicetypesequence1.ID
  lazy val CopyIndicator = invoicetypesequence1.CopyIndicator
  lazy val UUID = invoicetypesequence1.UUID
  lazy val IssueDate = invoicetypesequence1.IssueDate
  lazy val IssueTime = invoicetypesequence1.IssueTime
  lazy val InvoiceDueDate = invoicetypesequence2.InvoiceDueDate
  lazy val InvoiceTypeCode = invoicetypesequence2.InvoiceTypeCode
  lazy val Note = invoicetypesequence2.Note
  lazy val TaxPointDate = invoicetypesequence2.TaxPointDate
  lazy val DocumentCurrencyCode = invoicetypesequence2.DocumentCurrencyCode
  lazy val TaxCurrencyCode = invoicetypesequence2.TaxCurrencyCode
  lazy val PricingCurrencyCode = invoicetypesequence2.PricingCurrencyCode
  lazy val PaymentCurrencyCode = invoicetypesequence2.PaymentCurrencyCode
  lazy val PaymentAlternativeCurrencyCode = invoicetypesequence2.PaymentAlternativeCurrencyCode
  lazy val AccountingCostCode = invoicetypesequence2.AccountingCostCode
  lazy val AccountingCost = invoicetypesequence3.AccountingCost
  lazy val LineCountNumeric = invoicetypesequence3.LineCountNumeric
  lazy val InvoicePeriod = invoicetypesequence3.InvoicePeriod
  lazy val OrderReference = invoicetypesequence3.OrderReference
  lazy val BillingReference = invoicetypesequence3.BillingReference
  lazy val DespatchDocumentReference = invoicetypesequence3.DespatchDocumentReference
  lazy val ReceiptDocumentReference = invoicetypesequence3.ReceiptDocumentReference
  lazy val OriginatorDocumentReference = invoicetypesequence3.OriginatorDocumentReference
  lazy val ContractDocumentReference = invoicetypesequence3.ContractDocumentReference
  lazy val AdditionalDocumentReference = invoicetypesequence3.AdditionalDocumentReference
  lazy val Signature = invoicetypesequence4.Signature
  lazy val AccountingSupplierParty = invoicetypesequence4.AccountingSupplierParty
  lazy val AccountingCustomerParty = invoicetypesequence4.AccountingCustomerParty
  lazy val PayeeParty = invoicetypesequence4.PayeeParty
  lazy val BuyerCustomerParty = invoicetypesequence4.BuyerCustomerParty
  lazy val SellerSupplierParty = invoicetypesequence4.SellerSupplierParty
  lazy val TaxRepresentativeParty = invoicetypesequence4.TaxRepresentativeParty
  lazy val Delivery = invoicetypesequence4.Delivery
  lazy val DeliveryTerms = invoicetypesequence4.DeliveryTerms
  lazy val PaymentMeans = invoicetypesequence4.PaymentMeans
  lazy val PaymentTerms = invoicetypesequence5.PaymentTerms
  lazy val PrepaidPayment = invoicetypesequence5.PrepaidPayment
  lazy val AllowanceCharge = invoicetypesequence5.AllowanceCharge
  lazy val TaxExchangeRate = invoicetypesequence5.TaxExchangeRate
  lazy val PricingExchangeRate = invoicetypesequence5.PricingExchangeRate
  lazy val PaymentExchangeRate = invoicetypesequence5.PaymentExchangeRate
  lazy val PaymentAlternativeExchangeRate = invoicetypesequence5.PaymentAlternativeExchangeRate
  lazy val TaxTotal = invoicetypesequence5.TaxTotal
  lazy val LegalMonetaryTotal = invoicetypesequence5.LegalMonetaryTotal
  lazy val InvoiceLine = invoicetypesequence5.InvoiceLine
}


case class InvoiceTypeSequence1(UBLExtensions: Option[ubl.cec.UBLExtensionsType] = None,
  UBLVersionID: Option[ubl.cbc.UBLVersionIDType] = None,
  CustomizationID: Option[ubl.cbc.CustomizationIDType] = None,
  ProfileID: Option[ubl.cbc.ProfileIDType] = None,
  ProfileExecutionID: Option[ubl.cbc.ProfileExecutionIDType] = None,
  ID: ubl.cbc.IDType,
  CopyIndicator: Option[ubl.cbc.CopyIndicatorType] = None,
  UUID: Option[ubl.cbc.UUIDType] = None,
  IssueDate: ubl.cbc.IssueDateType,
  IssueTime: Option[ubl.cbc.IssueTimeType] = None)

case class InvoiceTypeSequence2(InvoiceDueDate: Option[ubl.cbc.InvoiceDueDateType] = None,
  InvoiceTypeCode: Option[ubl.cbc.InvoiceTypeCodeType] = None,
  Note: Seq[ubl.cbc.NoteType] = Nil,
  TaxPointDate: Option[ubl.cbc.TaxPointDateType] = None,
  DocumentCurrencyCode: Option[ubl.cbc.DocumentCurrencyCodeType] = None,
  TaxCurrencyCode: Option[ubl.cbc.TaxCurrencyCodeType] = None,
  PricingCurrencyCode: Option[ubl.cbc.PricingCurrencyCodeType] = None,
  PaymentCurrencyCode: Option[ubl.cbc.PaymentCurrencyCodeType] = None,
  PaymentAlternativeCurrencyCode: Option[ubl.cbc.PaymentAlternativeCurrencyCodeType] = None,
  AccountingCostCode: Option[ubl.cbc.AccountingCostCodeType] = None)

case class InvoiceTypeSequence3(AccountingCost: Option[ubl.cbc.AccountingCostType] = None,
  LineCountNumeric: Option[ubl.cbc.LineCountNumericType] = None,
  InvoicePeriod: Seq[ubl.cac.PeriodType] = Nil,
  OrderReference: Option[ubl.cac.OrderReferenceType] = None,
  BillingReference: Seq[ubl.cac.BillingReferenceType] = Nil,
  DespatchDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  ReceiptDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  OriginatorDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  ContractDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  AdditionalDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil)

case class InvoiceTypeSequence4(Signature: Seq[ubl.cac.SignatureType] = Nil,
  AccountingSupplierParty: ubl.cac.SupplierPartyType,
  AccountingCustomerParty: ubl.cac.CustomerPartyType,
  PayeeParty: Option[ubl.cac.PartyType] = None,
  BuyerCustomerParty: Option[ubl.cac.CustomerPartyType] = None,
  SellerSupplierParty: Option[ubl.cac.SupplierPartyType] = None,
  TaxRepresentativeParty: Option[ubl.cac.PartyType] = None,
  Delivery: Seq[ubl.cac.DeliveryType] = Nil,
  DeliveryTerms: Option[ubl.cac.DeliveryTermsType] = None,
  PaymentMeans: Seq[ubl.cac.PaymentMeansType] = Nil)

case class InvoiceTypeSequence5(PaymentTerms: Seq[ubl.cac.PaymentTermsType] = Nil,
  PrepaidPayment: Seq[ubl.cac.PaymentType] = Nil,
  AllowanceCharge: Seq[ubl.cac.AllowanceChargeType] = Nil,
  TaxExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  PricingExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  PaymentExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  PaymentAlternativeExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  TaxTotal: Seq[ubl.cac.TaxTotalType] = Nil,
  LegalMonetaryTotal: ubl.cac.MonetaryTotalType,
  InvoiceLine: Seq[ubl.cac.InvoiceLineType] = Nil)


// Generated by <a href="http://scalaxb.org/">scalaxb</a>.
package ubl.or


/** 
            <ccts:Component xmlns:ext="urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2" xmlns:ccts="urn:un:unece:uncefact:documentation:2" xmlns:cbc="urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2" xmlns:cac="urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2" xmlns="urn:oasis:names:specification:ubl:schema:xsd:Order-2" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
               <ccts:ComponentType>ABIE</ccts:ComponentType>
               <ccts:DictionaryEntryName>Order. Details</ccts:DictionaryEntryName>
               <ccts:Definition>The document used to order goods and services.</ccts:Definition>
               <ccts:ObjectClass>Order</ccts:ObjectClass>
               <ccts:AlternativeBusinessTerms>Purchase Order</ccts:AlternativeBusinessTerms>
            </ccts:Component>
         
*/
case class OrderType(ordertypesequence1: ubl.or.OrderTypeSequence1,
  ordertypesequence2: ubl.or.OrderTypeSequence2,
  ordertypesequence3: ubl.or.OrderTypeSequence3,
  ordertypesequence4: ubl.or.OrderTypeSequence4,
  ordertypesequence5: ubl.or.OrderTypeSequence5) {
  lazy val UBLExtensions = ordertypesequence1.UBLExtensions
  lazy val UBLVersionID = ordertypesequence1.UBLVersionID
  lazy val CustomizationID = ordertypesequence1.CustomizationID
  lazy val ProfileID = ordertypesequence1.ProfileID
  lazy val ProfileExecutionID = ordertypesequence1.ProfileExecutionID
  lazy val ID = ordertypesequence1.ID
  lazy val SalesOrderID = ordertypesequence1.SalesOrderID
  lazy val CopyIndicator = ordertypesequence1.CopyIndicator
  lazy val UUID = ordertypesequence1.UUID
  lazy val IssueDate = ordertypesequence1.IssueDate
  lazy val IssueTime = ordertypesequence2.IssueTime
  lazy val OrderTypeCode = ordertypesequence2.OrderTypeCode
  lazy val Note = ordertypesequence2.Note
  lazy val RequestedInvoiceCurrencyCode = ordertypesequence2.RequestedInvoiceCurrencyCode
  lazy val DocumentCurrencyCode = ordertypesequence2.DocumentCurrencyCode
  lazy val PricingCurrencyCode = ordertypesequence2.PricingCurrencyCode
  lazy val TaxCurrencyCode = ordertypesequence2.TaxCurrencyCode
  lazy val CustomerReference = ordertypesequence2.CustomerReference
  lazy val AccountingCostCode = ordertypesequence2.AccountingCostCode
  lazy val AccountingCost = ordertypesequence2.AccountingCost
  lazy val LineCountNumeric = ordertypesequence3.LineCountNumeric
  lazy val ValidityPeriod = ordertypesequence3.ValidityPeriod
  lazy val QuotationDocumentReference = ordertypesequence3.QuotationDocumentReference
  lazy val OrderDocumentReference = ordertypesequence3.OrderDocumentReference
  lazy val OriginatorDocumentReference = ordertypesequence3.OriginatorDocumentReference
  lazy val CatalogueReference = ordertypesequence3.CatalogueReference
  lazy val AdditionalDocumentReference = ordertypesequence3.AdditionalDocumentReference
  lazy val Contract = ordertypesequence3.Contract
  lazy val Signature = ordertypesequence3.Signature
  lazy val BuyerCustomerParty = ordertypesequence3.BuyerCustomerParty
  lazy val SellerSupplierParty = ordertypesequence4.SellerSupplierParty
  lazy val OriginatorCustomerParty = ordertypesequence4.OriginatorCustomerParty
  lazy val FreightForwarderParty = ordertypesequence4.FreightForwarderParty
  lazy val AccountingCustomerParty = ordertypesequence4.AccountingCustomerParty
  lazy val Delivery = ordertypesequence4.Delivery
  lazy val DeliveryTerms = ordertypesequence4.DeliveryTerms
  lazy val PaymentMeans = ordertypesequence4.PaymentMeans
  lazy val PaymentTerms = ordertypesequence4.PaymentTerms
  lazy val TransactionConditions = ordertypesequence4.TransactionConditions
  lazy val AllowanceCharge = ordertypesequence4.AllowanceCharge
  lazy val TaxExchangeRate = ordertypesequence5.TaxExchangeRate
  lazy val PricingExchangeRate = ordertypesequence5.PricingExchangeRate
  lazy val PaymentExchangeRate = ordertypesequence5.PaymentExchangeRate
  lazy val DestinationCountry = ordertypesequence5.DestinationCountry
  lazy val TaxTotal = ordertypesequence5.TaxTotal
  lazy val AnticipatedMonetaryTotal = ordertypesequence5.AnticipatedMonetaryTotal
  lazy val OrderLine = ordertypesequence5.OrderLine
}


case class OrderTypeSequence1(UBLExtensions: Option[ubl.cec.UBLExtensionsType] = None,
  UBLVersionID: Option[ubl.cbc.UBLVersionIDType] = None,
  CustomizationID: Option[ubl.cbc.CustomizationIDType] = None,
  ProfileID: Option[ubl.cbc.ProfileIDType] = None,
  ProfileExecutionID: Option[ubl.cbc.ProfileExecutionIDType] = None,
  ID: ubl.cbc.IDType,
  SalesOrderID: Option[ubl.cbc.SalesOrderIDType] = None,
  CopyIndicator: Option[ubl.cbc.CopyIndicatorType] = None,
  UUID: Option[ubl.cbc.UUIDType] = None,
  IssueDate: ubl.cbc.IssueDateType)

case class OrderTypeSequence2(IssueTime: Option[ubl.cbc.IssueTimeType] = None,
  OrderTypeCode: Option[ubl.cbc.OrderTypeCodeType] = None,
  Note: Seq[ubl.cbc.NoteType] = Nil,
  RequestedInvoiceCurrencyCode: Option[ubl.cbc.RequestedInvoiceCurrencyCodeType] = None,
  DocumentCurrencyCode: Option[ubl.cbc.DocumentCurrencyCodeType] = None,
  PricingCurrencyCode: Option[ubl.cbc.PricingCurrencyCodeType] = None,
  TaxCurrencyCode: Option[ubl.cbc.TaxCurrencyCodeType] = None,
  CustomerReference: Option[ubl.cbc.CustomerReferenceType] = None,
  AccountingCostCode: Option[ubl.cbc.AccountingCostCodeType] = None,
  AccountingCost: Option[ubl.cbc.AccountingCostType] = None)

case class OrderTypeSequence3(LineCountNumeric: Option[ubl.cbc.LineCountNumericType] = None,
  ValidityPeriod: Seq[ubl.cac.PeriodType] = Nil,
  QuotationDocumentReference: Option[ubl.cac.DocumentReferenceType] = None,
  OrderDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  OriginatorDocumentReference: Option[ubl.cac.DocumentReferenceType] = None,
  CatalogueReference: Option[ubl.cac.CatalogueReferenceType] = None,
  AdditionalDocumentReference: Seq[ubl.cac.DocumentReferenceType] = Nil,
  Contract: Seq[ubl.cac.ContractType] = Nil,
  Signature: Seq[ubl.cac.SignatureType] = Nil,
  BuyerCustomerParty: ubl.cac.CustomerPartyType)

case class OrderTypeSequence4(SellerSupplierParty: ubl.cac.SupplierPartyType,
  OriginatorCustomerParty: Option[ubl.cac.CustomerPartyType] = None,
  FreightForwarderParty: Option[ubl.cac.PartyType] = None,
  AccountingCustomerParty: Option[ubl.cac.CustomerPartyType] = None,
  Delivery: Seq[ubl.cac.DeliveryType] = Nil,
  DeliveryTerms: Option[ubl.cac.DeliveryTermsType] = None,
  PaymentMeans: Seq[ubl.cac.PaymentMeansType] = Nil,
  PaymentTerms: Seq[ubl.cac.PaymentTermsType] = Nil,
  TransactionConditions: Option[ubl.cac.TransactionConditionsType] = None,
  AllowanceCharge: Seq[ubl.cac.AllowanceChargeType] = Nil)

case class OrderTypeSequence5(TaxExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  PricingExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  PaymentExchangeRate: Option[ubl.cac.ExchangeRateType] = None,
  DestinationCountry: Option[ubl.cac.CountryType] = None,
  TaxTotal: Seq[ubl.cac.TaxTotalType] = Nil,
  AnticipatedMonetaryTotal: Option[ubl.cac.MonetaryTotalType] = None,
  OrderLine: Seq[ubl.cac.OrderLineType] = Nil)

